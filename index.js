const TelegramBot = require('node-telegram-bot-api');
require('dotenv').config();

const token = process.env.TELEGRAM_BOT_TOKEN;
const bot = new TelegramBot(token, { polling: true });

// –•—Ä–∞–Ω–∏–ª–∏—â–µ –¥–∞–Ω–Ω—ã—Ö (–ø–æ–∫–∞ –ø—Ä–æ—Å—Ç–æ –≤ –ø–∞–º—è—Ç–∏)
const chatData = {
  lastMessage: null, // –ü–æ—Å–ª–µ–¥–Ω–µ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –≤ —á–∞—Ç–µ
  messageCount: 0,   // –°—á–µ—Ç—á–∏–∫ —Å–æ–æ–±—â–µ–Ω–∏–π –¥–ª—è —Ä–∞–Ω–¥–æ–º–Ω—ã—Ö —Ä–µ–∞–∫—Ü–∏–π
};

// –°–ø–∏—Å–∫–∏ —Ä–µ–∞–∫—Ü–∏–π
const memes = [
  'https://i.imgur.com/example1.jpg', // –ó–∞–º–µ–Ω–∏ –Ω–∞ —Ä–µ–∞–ª—å–Ω—ã–µ —Å—Å—ã–ª–∫–∏!
  'https://i.imgur.com/example2.png',
];

const stickers = [
  'CAACAgIAAxkBAAIB...', // –ó–∞–º–µ–Ω–∏ –Ω–∞ —Ä–µ–∞–ª—å–Ω—ã–µ ID —Å—Ç–∏–∫–µ—Ä–æ–≤!
  'CAACAgQAAxkBAAIB...',
];

const phrasesAboutBeer = [
  '—è —Ç–æ–ª—å–∫–æ –ø–æ–¥—É–º–∞–ª –æ –ø–∏–≤–µ –∏ —Ç—É—Ç –Ω–∞ –Ω–∞—Ö—É–π!',
  '–ø–µ–π –ø–∏–≤–æ –ø–µ–Ω–Ω–æ–µ ‚Äî –±—É–¥–µ—Ç –∂–∏–∑–Ω—å –æ—Ç–º–µ–Ω–Ω–∞—è!',
  '–∫–∞–∫ –≥–æ–≤–æ—Ä–∏—Ç –ñ–µ–∫–∞ –ì–æ—Ä–ª–æ–≤–æ–π - –°–∞–Ω—è –Ω–∞—Å–æ—Å –ø–∏–≤–Ω–æ–π)',
  '–ª—É—á—à–µ –ø–∏–≤–æ –≤ —Ä—É–∫–µ, —á–µ–º –¥–µ–≤–∏—Ü–∞ –≤–¥–∞–ª–µ–∫–µ',
  '—É —á–µ–ª–æ–≤–µ–∫–∞ –≤—Å–µ–≥–¥–∞ –¥–æ–ª–∂–Ω–æ –±—ã—Ç—å –≥–æ—Ä—è—á–µ–µ —Å–µ—Ä–¥—Ü–µ –∏ —Ö–æ–ª–æ–¥–Ω–æ–µ –ø–∏–≤–æ!',
];
const phrasesAboutGellert = [
  '–ì–µ–ª–ª–µ—Ä—Ç –∫–æ–Ω–µ—á–Ω–æ –¥–ª—è –ø–µ—Ç—É—Ö–æ–≤, –Ω–æ –º–æ–∂–Ω–æ –∏ —Å–≥–æ–Ω—è—Ç—å –Ω–∞ –ø–∞—Ä—É –∫—Ä—É–∂–µ–∫',
  '–±–ª—è, –∫–∞–∫ –≤–∞—Å –Ω–µ –∑–∞–µ–±–∞–ª –µ—â—ë —ç—Ç–æ—Ç –≥–µ–ª–ª–µ—Ä—Ç',
  '–∫—Å—Ç–∞—Ç–∏, —É –°–∞–Ω–∏ –≤ –≥–µ–ª–ª–µ—Ä—Ç–µ –ø–æ –ø–æ–Ω–µ–¥–µ–ª—å–Ω–∏–∫–∞–º –æ–¥–∏–Ω–æ–∫–∏–µ –±–∞–±—ã —Å–∏–¥—è—Ç',
  '—á—Ç–æ-—Ç–æ —Ç–æ–∂–µ –∑–∞—Ö–æ—Ç–µ–ª–æ—Å—å –≤ –ì–µ–ª–ª–µ—Ä—Ç...',
];

// –ö–æ–º–∞–Ω–¥–∞ /start
bot.onText(/\/start/, (msg) => {
  const chatId = msg.chat.id;
  const text = `–û –¥–∞! –Ø –∂–∏–≤! –í–∞—à –ø–∞–ø–∏—á-–±–æ—Ç –Ω–∞ —Å–≤—è–∑–∏. üëª

–Ø —Ä–µ–∞–≥–∏—Ä—É—é –Ω–∞ —Å–æ–æ–±—â–µ–Ω–∏—è –≤ —á–∞—Ç–µ! –ü–æ–ø—Ä–æ–±—É–π –Ω–∞–ø–∏—Å–∞—Ç—å:
‚Ä¢ "—Å–∫—É—á–Ω–æ" –∏–ª–∏ "–Ω—É–¥–Ω–æ"
‚Ä¢ "–∫–∞–∫ –¥–µ–ª–∞"
‚Ä¢ "–≥–æ –µ—Å—Ç—å" –∏–ª–∏ "—à–∞—É—Ä–º–∞"
‚Ä¢ –ò–ª–∏ –ø—Ä–æ—Å—Ç–æ –æ–±—â–∞–π—Ç–µ—Å—å, —è –∏–Ω–æ–≥–¥–∞ –æ—Ç–≤–µ—á–∞—é —Ä–∞–Ω–¥–æ–º–Ω–æ!

–ö–æ–º–∞–Ω–¥—ã:
/meme - –∫–∏–Ω—É —Å–ª—É—á–∞–π–Ω—ã–π –º–µ–º
/sticker - –∫–∏–Ω—É —Å–ª—É—á–∞–π–Ω—ã–π —Å—Ç–∏–∫–µ—Ä
/action - –≤—ã–¥–∞–º —Ä–∞–Ω–¥–æ–º–Ω—ã–π –ø—Ä–∏–∫–∞–∑
/repeat - –ø–æ–≤—Ç–æ—Ä—é –ø–æ—Å–ª–µ–¥–Ω–µ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –∫–∞–ø—Å–æ–º
  `;
  bot.sendMessage(chatId, text);
});

// –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –í–°–ï–• —Å–æ–æ–±—â–µ–Ω–∏–π
bot.on('message', (msg) => {
  // –ò–≥–Ω–æ—Ä–∏—Ä—É–µ–º —Å–ª—É–∂–µ–±–Ω—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è –∏ –∫–æ–º–∞–Ω–¥—ã
  if (!msg.text || msg.text.startsWith('/')) return;

  const chatId = msg.chat.id;
  const text = msg.text.toLowerCase();
  const userName = msg.from.first_name;

  // –°–æ—Ö—Ä–∞–Ω—è–µ–º –ø–æ—Å–ª–µ–¥–Ω–µ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
  chatData.lastMessage = msg;
  chatData.messageCount++;

  // –†–µ–∞–∫—Ü–∏—è –Ω–∞ —Å–º–µ—Ö
  if (text.includes('–∞—Ö–∞') || text.includes('–∞—Ö–∞—Ö')) {
    bot.sendMessage(chatId, `–∏ —Ö—É–ª–∏ —É–≥–∞—Ä–∞–µ–º —Ç–æ ${userName}?`);
  }

  // –†–µ–∞–∫—Ü–∏—è –Ω–∞ –∑–∞–µ–±–∏—Å—å
  if (text.includes('–∑–∞–µ–±–∏—Å—å') || text.includes('–æ—Ö—É–µ–Ω–Ω–æ') || text.includes('–∞—Ö—É–µ–Ω–Ω–æ') || text.includes('–∞—Ö—É–µ–Ω–Ω–æ') || text.includes('—Ö—É–µ–Ω') ) {
   
    setTimeout(() => {
      bot.sendMessage(chatId, `–±–ª—è, –±–µ—Å—Å–ø–æ—Ä–Ω–æ –ó–ê–ï–ë–ò–°–¨ ${userName}`);
    }, 1000);
  }

  // –†–µ–∞–∫—Ü–∏—è –Ω–∞ –ì–µ–ª–ª–µ—Ä—Ç
  if (text.includes('–ì–µ–ª–ª–µ—Ä—Ç') || text.includes('–≥–µ–ª—é') || text.includes('–≥–µ–ª—è') || text.includes('–µ–ª–ª–µ—Ä—Ç')) {
    const randomPhrase = phrasesAboutGellert[Math.floor(Math.random() * phrasesAboutGellert.length)];

    setTimeout(() => {
      bot.sendMessage(chatId, `${randomPhrase}`)
    }, 2000);
  }

  // –†–µ–∞–∫—Ü–∏—è –Ω–∞ –≤–æ–ø—Ä–æ—Å –æ –¥–µ–ª–∞—Ö
  if (text.includes('–∫–∞–∫ –¥–µ–ª–∞') || text.includes('—á–µ –∫–∞–∫')) {
    setTimeout(() => {
      bot.sendMessage(chatId, `—Å –ø–∏–≤–∫–æ–º –ø–æ–π–¥—ë—Ç, ${userName}! –ê —É —Ç–µ–±—è —á—ë –∫–∞–∫?`, {
        reply_to_message_id: msg.message_id
      });
    }, 1000);
  }

  // –†–µ–∞–∫—Ü–∏—è –Ω–∞ –ø–∏–≤–æ
  if (text.includes('–ø–∏–≤–æ') || text.includes('–ø–∏–≤–Ω–æ–π') || text.includes('–ø–∏–≤') || text.includes('–ø–∏–≤–∫–∞')) {
    const randomPhrase = phrasesAboutBeer[Math.floor(Math.random() * phrasesAboutBeer.length)];
    setTimeout(() => {
      bot.sendMessage(chatId, `–ï–±–∞—Ç—å, ${userName}! ${randomPhrase}`, {
        reply_to_message_id: msg.message_id
      });
    }, 1000);
  }


  // –†–∞–Ω–¥–æ–º–Ω–∞—è —Ä–µ–∞–∫—Ü–∏—è (–ø—Ä–∏–º–µ—Ä–Ω–æ –Ω–∞ –∫–∞–∂–¥–æ–µ 2-3-–µ —Å–æ–æ–±—â–µ–Ω–∏–µ)
  if (Math.random() < 0.5) {
    const randomPhrase = phrases[Math.floor(Math.random() * phrases.length)];
    setTimeout(() => {
      bot.sendMessage(chatId, randomPhrase, {
        reply_to_message_id: msg.message_id
      });
    }, 2000);
  }
});

// –ö–æ–º–∞–Ω–¥–∞ /meme
bot.onText(/\/meme/, (msg) => {
  const chatId = msg.chat.id;
  const randomMeme = memes[Math.floor(Math.random() * memes.length)];
  bot.sendPhoto(chatId, randomMeme);
});

// –ö–æ–º–∞–Ω–¥–∞ /sticker
bot.onText(/\/sticker/, (msg) => {
  const chatId = msg.chat.id;
  const randomSticker = stickers[Math.floor(Math.random() * stickers.length)];
  bot.sendSticker(chatId, randomSticker);
});

// –ö–æ–º–∞–Ω–¥–∞ /repeat
bot.onText(/\/repeat/, (msg) => {
  const chatId = msg.chat.id;
  if (!chatData.lastMessage) {
    bot.sendMessage(chatId, '–Ø –µ—â–µ –Ω–∏—á–µ–≥–æ –Ω–µ –∑–∞–ø–æ–º–Ω–∏–ª...');
    return;
  }
  const textToRepeat = chatData.lastMessage.text.toUpperCase();
  bot.sendMessage(chatId, textToRepeat, {
    reply_to_message_id: chatData.lastMessage.message_id
  });
});

console.log('–ë–æ—Ç-–æ–∂–∏–≤–∏—Ç–µ–ª—å —á–∞—Ç–∞ –∑–∞–ø—É—â–µ–Ω! üöÄ');